{"version":3,"sources":["components/Header.tsx","components/Affiliations.tsx","components/Events.tsx","components/Works.tsx","components/Skills.tsx","components/Internships.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","className","Affiliations","Events","id","Works","href","Skills","Internships","App","exact","path","component","window","location","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gRAWeA,G,MATU,WACvB,OACE,4BAAQC,UAAU,cAChB,wCACA,mECYSC,EAhBgB,WAC7B,OACE,6BACE,4CACA,4BACE,kNACA,+GACA,yLACA,4CACA,4JACA,8LCYOC,EAtBU,WACvB,OACE,yBAAKC,GAAG,UACN,oDACA,4BACE,kGACA,kEACA,6CACA,8FACA,+GACA,gFACA,2CACA,2CACA,qEACA,0EACA,yEACA,gGCgFOC,EAhGS,WACtB,OACE,yBAAKD,GAAG,SACN,qCACA,+BACE,+BACE,4BACE,oCACA,2CACA,wCAGJ,+BACE,4BACE,4BACE,uBACEH,UAAU,WACVK,KAAK,0CAFP,eAOF,2GACA,uCAEF,4BACE,4BACE,uBACEL,UAAU,WACVK,KAAK,sCAFP,YAOF,oHACA,qCAEF,4BACE,4BACE,uBACEL,UAAU,WACVK,KAAK,8CAFP,mBAOF,mFACA,qCAEF,4BACE,4BACE,uBACEL,UAAU,WACVK,KAAK,+CAFP,oBAOF,0FACA,qCAEF,4BACE,4BACE,uBACEL,UAAU,WACVK,KAAK,8CAFP,oBAOF,sGACA,4CAEF,4BACE,0CACA,oHACA,qCAEF,4BACE,4BACE,uBACEL,UAAU,WACVK,KAAK,kDAFP,gBAOF,2GACA,yCC9BGC,EA1DU,WACvB,OACE,yBAAKH,GAAG,UACN,sCACA,+BACE,+BACE,4BACE,qCACA,uCAGJ,+BACE,4BACE,qCACA,+FAEF,4BACE,sCACA,0IAEF,4BACE,mCACA,6FAEF,4BACE,6CACA,wFAEF,4BACE,wDACA,sGAEF,4BACE,qCACA,yGAEF,4BACE,oCACA,qEAEF,4BACE,oCACA,yDAEF,4BACE,sCACA,yDAEF,4BACE,oCACA,gDCvCGI,EAXe,WAC5B,OACE,yBAAKJ,GAAG,eACN,2CACA,4BACE,8FCoCOK,MA1Bf,WACE,OACE,yBAAKR,UAAU,OACb,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,SAASC,UAAW,WAE9B,OADAC,OAAOC,SAASR,KAjBC,wFAkBV,aCrBDS,QACW,cAA7BF,OAAOC,SAASE,UAEe,UAA7BH,OAAOC,SAASE,UAEhBH,OAAOC,SAASE,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ec9639c9.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header: React.FC = () => {\n  return (\n    <header className=\"App-header\">\n      <h1>tanacchi</h1>\n      <p>This is the tanacchi's portfolio.</p>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\nconst Affiliations: React.FC = () => {\n  return (\n    <div>\n      <h2>Affiliations</h2>\n      <ul>\n        <li>九州工業大学大学院 生命体工学研究科 人間知能システム専攻 (2020 ~ 2022)</li>\n        <li>VRAIN Solution エンジニアスタッフ (2020 ~ )</li>\n        <li>九工大プロ研（九州工業大学プログラミング研究会）(2019 ~ )</li>\n        <li>MYDRY (2018)</li>\n        <li>九州工業大学 工学部 総合システム工学科 (2016 ~ 2020)</li>\n        <li>九州工業大学 自律移動ロボット開発プロジェクト CIR-KIT (2016 ~ 2018)</li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Affiliations\n","import React from 'react'\n\nconst Events: React.FC = () => {\n  return (\n    <div id=\"Events\">\n      <h2>Events and Hackathon</h2>\n      <ul>\n        <li>つくばチャレンジ(2016, 2017, 2018)</li>\n        <li>HACK U 2018 (Happy Hacking 賞)</li>\n        <li>enPiT-BizSysD</li>\n        <li>チャレキャラ 2018 (優秀賞)</li>\n        <li>PBL 合同成果発表会 (グランプリ)</li>\n        <li>Hack Festival Fukuoka (最優秀賞)</li>\n        <li>SPAJAM 2019</li>\n        <li>HACK U 2019</li>\n        <li>JPHACKS HackDay (Best Hack Day Award)</li>\n        <li>Hack Festival Kitakyushu (Red Bull 賞)</li>\n        <li>チャレキャラ 2019</li>\n        <li>JPHACKS AwardDay (FUJI FILM賞，Innovator認定)</li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Events\n","import React from 'react'\n\nconst Works: React.FC = () => {\n  return (\n    <div id=\"Works\">\n      <h2>Works</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Description</th>\n            <th>Year  </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>\n              <a\n                className=\"App-link\"\n                href=\"https://github.com/tanacchi/rogue_game\"\n              >\n                rogue_game\n              </a>\n            </td>\n            <td>ターミナル上で動くRPGゲーム</td>\n            <td>2018 ~</td>\n          </tr>\n          <tr>\n            <td>\n              <a\n                className=\"App-link\"\n                href=\"https://github.com/jphacks/FK_1906\"\n              >\n                FK_1906\n              </a>\n            </td>\n            <td>プレゼンスキルの数値化ツール</td>\n            <td>2019</td>\n          </tr>\n          <tr>\n            <td>\n              <a\n                className=\"App-link\"\n                href=\"https://github.com/tanacchi/lisp_in_python\"\n              >\n                lisp_in_python\n              </a>\n            </td>\n            <td>Lisp インタプリタ in Python</td>\n            <td>2019</td>\n          </tr>\n          <tr>\n            <td>\n              <a\n                className=\"App-link\"\n                href=\"https://github.com/tanacchi/python_tanaline\"\n              >\n                python_tanaline\n              </a>\n            </td>\n            <td>新入生教育用LINEボット</td>\n            <td>2019</td>\n          </tr>\n          <tr>\n            <td>\n              <a\n                className=\"App-link\"\n                href=\"https://github.com/CIR-KIT/fifth_robot_pkg\"\n              >\n                fifth_robot_pkg\n              </a>\n            </td>\n            <td>自律移動ロボット(CIR-KIT5号機)</td>\n            <td>2016 ~ 2018</td>\n          </tr>\n          <tr>\n            <td>Hello Idea</td>\n            <td>アイデア創出プラットフォーム</td>\n            <td>2018</td>\n          </tr>\n          <tr>\n            <td>\n              <a\n                className=\"App-link\"\n                href=\"https://qr-official.line.me/sid/L/682dslrg.png\"\n              >\n                tanakinator\n              </a>\n            </td>\n            <td>LINE Bot で動作するアキネーター</td>\n            <td>2020</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default Works\n","import React from 'react'\n\nconst Skills: React.FC = () => {\n  return (\n    <div id=\"Skills\">\n      <h2>Skills</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Skill</th>\n            <th>Level</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>C/C++</td>\n            <td>RPG ゲーム開発，ROS ノード</td>\n          </tr>\n          <tr>\n            <td>Python</td>\n            <td>Web サービス，機械学習，Lisp インタプリタ</td>\n          </tr>\n          <tr>\n            <td>ROS</td>\n            <td>自律移動ロボット開発</td>\n          </tr>\n          <tr>\n            <td>Ruby on Rails</td>\n            <td>Web サービス開発(1年間)</td>\n          </tr>\n          <tr>\n            <td>機械学習</td>\n            <td>独学3ヶ月 ＋ 大学院で研究</td>\n          </tr>\n          <tr>\n            <td>Flask</td>\n            <td>簡単なWebサービス，LINE Bot 開発</td>\n          </tr>\n          <tr>\n            <td>Ruby</td>\n            <td>Rails で使う程度</td>\n          </tr>\n          <tr>\n            <td>Lisp</td>\n            <td>趣味程度</td>\n          </tr>\n          <tr>\n            <td>Vue.js</td>\n            <td>趣味程度</td>\n          </tr>\n          <tr>\n            <td>Rust</td>\n            <td>Hello World</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default Skills\n","import React from 'react'\n\nconst Internships: React.FC = () => {\n  return (\n    <div id=\"Internships\">\n      <h2>Internships</h2>\n      <ul>\n        <li>株式会社OPTiM R&Dチーム 2-weeks</li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Internships\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom'\nimport './App.css';\nimport Header from './components/Header'\nimport Access from './components/Access'\nimport Affiliations from './components/Affiliations'\nimport Events from './components/Events'\nimport Works from './components/Works'\nimport Skills from './components/Skills'\nimport Internships from './components/Internships'\n\nconst setupScriptURL: string = 'https://raw.githubusercontent.com/tanacchi/dotfiles/master/scripts/setup/install.bash';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <div>\n          <Switch>\n            <Route exact path=\"/\">\n              <Header />\n              <Affiliations />\n              <Events />\n              <Works />\n              <Skills />\n              <Internships />\n            </Route>\n            <Route path=\"/setup\" component={() => {\n              window.location.href = setupScriptURL\n              return null\n            }}>\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}